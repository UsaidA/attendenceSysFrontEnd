{"ast":null,"code":"import { Attendence, singletonAuth } from \"../../classes\";\nimport { attendLecture } from 'src/services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n\nfunction DashboardComponent_tr_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const Group_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", Group_r3.lectureID, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", Group_r3.lectureStart, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", Group_r3.lectureEnd, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", Group_r3.moduleID, \"\");\n  }\n}\n\nfunction DashboardComponent_tr_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const aGroup_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", aGroup_r4.studentID, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", aGroup_r4.lectureID, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", aGroup_r4.hasAttended, \"\");\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(router) {\n      this.router = router;\n      this.firstName = \"\";\n      this.lastName = \"\";\n      this.email = \"\";\n      this.academicAdvisor = \"\";\n      this.courseName = \"\";\n      this.studentID = \"\";\n      this.temp = \"\";\n      this.data = [];\n      this.aData = [];\n      this.dtOptions = {};\n    }\n\n    ngOnInit() {\n      console.log(\"test\");\n      this.getUserData();\n      this.getLecturesData();\n      this.getAttendenceData();\n      this.stringToDate();\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 5,\n        lengthMenu: [5, 15, 25],\n        processing: true\n      };\n    }\n\n    attendLecture(attendCode) {\n      console.log(attendCode.value); // see which lecture is running from data[] array, \n      // send that lecture ID as an attend object \n\n      let currentTime = new Date();\n      console.log(currentTime);\n      this.data.forEach((element, i) => {\n        console.log(element.lectureStart.getTime() >= currentTime.getTime(), element.lectureID, \"  : all should be greater than now \");\n        console.log(element.lectureEnd.getTime() < currentTime.getTime(), element.lectureID, \"  : all should be less than now \");\n\n        if (element.lectureStart.getTime() >= currentTime.getTime() && element.lectureEnd.getTime() < currentTime.getTime()) {\n          let lecID = element.lectureID;\n          console.log(this.studentID);\n          var attendObj = new Attendence(null, this.studentID, lecID, \"1\");\n          console.log(attendObj);\n          var jwtToken = localStorage.getItem('jwtToken');\n\n          if (jwtToken == null) {\n            console.log(\"null issue in teacher dashboard\");\n          } else {\n            attendLecture(jwtToken, attendObj, attendCode.value);\n          }\n        } else {}\n      });\n      console.log(this.data[0].lectureEnd);\n      console.log(new Date(this.data[0].lectureEnd));\n    }\n\n    stringToDate() {\n      this.data.forEach((element, i) => {\n        this.data[i].lectureStart = new Date(element.lectureStart);\n        console.log(this.data[i].lectureStart);\n        this.data[i].lectureEnd = new Date(element.lectureEnd);\n      });\n      console.log(this.data);\n    }\n\n    LogOut() {\n      //const auth = singletonAuth.getInstance(\"\");\n      singletonAuth.logOut();\n      this.router.navigate(['/']);\n      this.ngOndestroy();\n    }\n\n    getAttendenceData() {\n      if (localStorage.getItem('attendence') === null) {\n        console.log(\"local storage has no attendence\");\n      } else {\n        let attendenceFromStorage = JSON.parse(localStorage.getItem('attendence') || '{}');\n        this.aData = attendenceFromStorage;\n        console.log(attendenceFromStorage, \" :attendencefromstorage\");\n        console.log(this.aData, \"  : this.aData\");\n      }\n    }\n\n    getLecturesData() {\n      if (localStorage.getItem('lectures') === null) {\n        console.log(\"local storage has no lectures\");\n      } else {\n        let lecturesFromStorage = JSON.parse(localStorage.getItem('lectures') || '{}');\n        this.data = lecturesFromStorage;\n        console.log(lecturesFromStorage, \" :lecturesfromstorage\");\n        console.log(this.data, \"  : this.data\");\n      }\n    }\n\n    getUserData() {\n      if (localStorage.getItem('user') === null) {\n        console.log(\"local storage has no user\");\n      } else {\n        //let student = plainToClass(Student, x)\n        let userFromStorage = JSON.parse(localStorage.getItem('user') || '{}');\n        this.studentID = userFromStorage.studentID;\n        this.firstName = userFromStorage.firstName;\n        this.lastName = userFromStorage.lastName;\n        this.email = userFromStorage.email;\n        console.log(userFromStorage.studentID);\n        console.log(this.studentID, this.firstName, this.lastName, this.email);\n      }\n    }\n\n    ngOndestroy() {\n      console.log(\"dashboard destroyed\");\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 58,\n    vars: 7,\n    consts: [[1, \"container-xl\", \"px-4\", \"mt-4\"], [1, \"mt-0\", \"mb-4\"], [1, \"row\"], [1, \"col-xl-4\"], [1, \"card\", \"mb-4\", \"mb-xl-0\"], [1, \"card\", \"mb-4\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"row\", \"gx-3\", \"mb-3\"], [1, \"col-md-6\"], [\"for\", \"inputFirstName\", 1, \"small\", \"mb-1\"], [\"for\", \"inputLastName\", 1, \"small\", \"mb-1\"], [1, \"mb-3\"], [\"for\", \"inputEmailAddress\", 1, \"small\", \"mb-1\"], [1, \"small\", \"mb-1\"], [\"type\", \"attendCode\", \"name\", \"attendCode\", \"placeholder\", \"Enter attend Code\", 1, \"form-control\", \"form-control-lg\"], [\"attendCode\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-dark\", \"btn-sm\", 2, \"color\", \"rgb(255, 255, 255)\", \"background-color\", \"rgb(0, 0, 0)\", \"border-radius\", \"100px\", \"font-weight\", \"500\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn\", 2, \"color\", \"rgb(255, 255, 255)\", \"background-color\", \"rgb(18, 19, 43)\", \"border-radius\", \"4px\", \"font-weight\", \"700\", 3, \"click\"], [1, \"col-xl-8\"], [\"datatable\", \"\", 1, \"table\", \"table-striped\", \"table-bordered\", \"table-sm\", \"row-border\", \"hover\", 3, \"dtOptions\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"hr\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n        i0.ɵɵtext(7, \"Student Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\")(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 11);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 13);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 12)(22, \"label\", 14);\n        i0.ɵɵtext(23, \"Attend Code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 15, 16);\n        i0.ɵɵelementStart(26, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_26_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(25);\n\n          return i0.ɵɵresetView(ctx.attendLecture(_r0));\n        });\n        i0.ɵɵtext(27, \"attend\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_28_listener() {\n          return ctx.LogOut();\n        });\n        i0.ɵɵtext(29, \"Log Out\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(30, \"div\", 19)(31, \"div\")(32, \"table\", 20)(33, \"thead\")(34, \"tr\")(35, \"th\");\n        i0.ɵɵtext(36, \"LectureID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\");\n        i0.ɵɵtext(38, \"LectureStart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"th\");\n        i0.ɵɵtext(40, \"LectureEnd\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"th\");\n        i0.ɵɵtext(42, \"ModuleID\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"tbody\");\n        i0.ɵɵtemplate(44, DashboardComponent_tr_44_Template, 9, 4, \"tr\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtext(45, \" \\u00A0 \");\n        i0.ɵɵelementStart(46, \"div\")(47, \"table\", 20)(48, \"thead\")(49, \"tr\")(50, \"th\");\n        i0.ɵɵtext(51, \"StudentID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"th\");\n        i0.ɵɵtext(53, \"LectureID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"th\");\n        i0.ɵɵtext(55, \"hasAttended\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(56, \"tbody\");\n        i0.ɵɵtemplate(57, DashboardComponent_tr_57_Template, 7, 3, \"tr\", 21);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate1(\"First name: \", ctx.firstName, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Last name: \", ctx.lastName, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Email address: \", ctx.email, \"\");\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.aData);\n      }\n    }\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}