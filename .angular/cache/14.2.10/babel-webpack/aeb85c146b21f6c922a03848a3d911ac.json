{"ast":null,"code":"class Registration {\n  constructor(email, password) {\n    this.email = email;\n    this.password = password;\n    this.email = email;\n    this.password = password;\n  }\n\n  login(registered, token) {\n    const temp = JSON.stringify(registered);\n    localStorage.setItem('registered', temp);\n    localStorage.setItem('token', token);\n  }\n\n  isLoggedIn() {\n    if (localStorage.getItem('token') === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n\nclass Student {\n  constructor(studentID, firstName, lastName, email, teacherID, courseID, dateStarted) {\n    this.studentID = studentID;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.teacherID = teacherID;\n    this.courseID = courseID;\n    this.dateStarted = dateStarted;\n    this.studentID = studentID;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.teacherID = teacherID;\n    this.courseID = courseID;\n    this.dateStarted = dateStarted;\n  }\n\n}\n\nlet singletonAuth = /*#__PURE__*/(() => {\n  class singletonAuth {\n    constructor(token) {\n      localStorage.setItem('jwtToken', token);\n    }\n\n    static getInstance(token) {\n      if (!singletonAuth._instance) {\n        singletonAuth._instance = new singletonAuth(token);\n      }\n\n      return singletonAuth._instance;\n    }\n\n    isLoggedIn() {\n      if (localStorage.getItem('jwtToken') === null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n    static logOut() {\n      this._instance = null;\n      localStorage.clear();\n    }\n\n  }\n\n  singletonAuth._instance = null;\n  return singletonAuth;\n})();\n\nclass Lectures {\n  constructor(lectureID, lectureStart, lectureEnd, moduleID) {\n    this.lectureID = lectureID;\n    this.lectureStart = lectureStart;\n    this.lectureEnd = lectureEnd;\n    this.moduleID = moduleID;\n    this.lectureID = lectureID;\n    this.lectureStart = lectureStart;\n    this.lectureEnd = new Date(lectureEnd);\n    this.moduleID = moduleID;\n  }\n\n}\n\nclass Attendence {\n  constructor(attendenceID, studentID, lectureID, hasAttended) {\n    this.attendenceID = attendenceID;\n    this.studentID = studentID;\n    this.lectureID = lectureID;\n    this.hasAttended = hasAttended;\n    this.attendenceID = attendenceID;\n    this.studentID = studentID;\n    this.lectureID = lectureID;\n    this.hasAttended = hasAttended;\n  }\n\n}\n\nexport { Registration, Student, singletonAuth, Lectures, Attendence };","map":null,"metadata":{},"sourceType":"module"}