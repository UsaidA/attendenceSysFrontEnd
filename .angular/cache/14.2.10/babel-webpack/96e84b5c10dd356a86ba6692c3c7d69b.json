{"ast":null,"code":"import _asyncToGenerator from \"C:/attendenceFrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport axios from 'axios';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Registration, singletonAuth } from \"../../classes\";\nlet LoginComponent = class LoginComponent {\n  constructor(router, vcr, cfr) {\n    this.router = router;\n    this.vcr = vcr;\n    this.cfr = cfr;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('')\n    });\n    this.loginText = \"\";\n  }\n\n  ngOnInit() {}\n\n  sendLoginRequest(email, password) {\n    const registration = new Registration(email.value, password.value);\n    console.log(registration);\n    const JSONOBJ = JSON.stringify(registration);\n    console.log(JSONOBJ);\n    axios.post('http://localhost:8888/api/login', JSONOBJ, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {\n        this.loginText = \"password or email incorrect\";\n        console.log(response.data, \"hi here\");\n      } else {\n        console.log(response.data.accessToken, \" access token\");\n        const auth = singletonAuth.getInstance(response.data.accessToken);\n        const stringfyUser = JSON.stringify(registration);\n        localStorage.setItem('registered', stringfyUser);\n\n        if (response.data.accessControl === 1) {\n          console.log(response.data.accessControl, \" in TEACHER CONRTOLLKER\");\n          let promiseArr = [];\n          promiseArr[0] = this.getAllStudents(response.data.accessToken);\n          promiseArr[1] = this.getAllStudentAttendences(response.data.accessToken);\n          promiseArr[2] = this.getAttendenceCode(response.data.accessToken);\n          Promise.all(promiseArr).then(values => {\n            console.log(values);\n            console.log(\"inside teacher promise\");\n            this.loadTeacherDashboard();\n          }).catch(error => console.log('error'));\n        } else if (response.data.accessControl === 0) {\n          console.log(response.data.accessControl, \" in student CONRTOLLKER\");\n          let promiseArr = [];\n          promiseArr[0] = this.getAttendenceData(response.data.accessToken);\n          console.log(this.getAttendenceData(response.data.accessToken));\n          promiseArr[1] = this.getUserData(response.data.accessToken);\n          promiseArr[2] = this.getLectureData(response.data.accessToken);\n          Promise.all(promiseArr).then(values => {\n            console.log(values);\n            console.log(\"inside promise\");\n            this.loadDashboard();\n          }).catch(error => console.log('error'));\n        }\n      }\n\n      console.log(response);\n    }).catch(error => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(email.value);\n  }\n\n  loadTeacherDashboard() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.vcr.clear();\n\n      const {\n        TeacherDashboardComponent\n      } = yield import('../teacher-dashboard/teacher-dashboard.component');\n\n      _this.vcr.createComponent(_this.cfr.resolveComponentFactory(TeacherDashboardComponent));\n\n      _this.router.navigate(['/teacherDashboard']);\n    })();\n  }\n\n  loadDashboard() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.vcr.clear();\n\n      const {\n        DashboardComponent\n      } = yield import('../dashboard/dashboard.component');\n\n      _this2.vcr.createComponent(_this2.cfr.resolveComponentFactory(DashboardComponent));\n\n      _this2.router.navigate(['/dashboard']);\n    })();\n  }\n\n  getAttendenceCode(accessToken) {\n    return new Promise((resolve, reject) => {\n      const yourConfig = {\n        headers: {\n          Authorization: accessToken\n        }\n      };\n      axios.get('http://localhost:8888/api/attendence/getAttendCode', yourConfig).then(response => {\n        if (response.data == \"Admin Only Access\" || response.data == \"Some error occurred while getting attendCode.\") {} else {\n          const jsonUser = JSON.stringify(response.data);\n          console.log(jsonUser, \": attend Code\");\n          localStorage.setItem('attendCode', jsonUser);\n          resolve(response);\n        }\n      }).catch(error => {\n        // Error ðŸ˜¨\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n        reject(error);\n      });\n    });\n  }\n\n  getAllStudentAttendences(accessToken) {\n    return new Promise((resolve, reject) => {\n      const yourConfig = {\n        headers: {\n          Authorization: accessToken\n        }\n      };\n      axios.get('http://localhost:8888/api/attendence/getAllAttendences', yourConfig).then(response => {\n        if (response.data == \"token not valid\" || response.data == \"Access denied\") {} else {\n          const jsonUser = JSON.stringify(response.data);\n          console.log(jsonUser, \": teacher All Attendences\");\n          localStorage.setItem('allStudentAttendences', jsonUser);\n          resolve(response);\n        }\n      }).catch(error => {\n        // Error ðŸ˜¨\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n        reject(error);\n      });\n    });\n  }\n\n  getAllStudents(accessToken) {\n    return new Promise((resolve, reject) => {\n      const yourConfig = {\n        headers: {\n          Authorization: accessToken\n        }\n      };\n      axios.get('http://localhost:8888/api/students/getAll', yourConfig).then(response => {\n        if (response.data == \"Admin Only Access\" || response.data == \"Email doesn't exist\") {} else {\n          const jsonUser = JSON.stringify(response.data);\n          console.log(jsonUser, \": All Students\");\n          localStorage.setItem('allStudents', jsonUser);\n          resolve(response);\n        }\n      }).catch(error => {\n        // Error ðŸ˜¨\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n        reject(error);\n      });\n    });\n  }\n\n  getAttendenceData(accessToken) {\n    return new Promise((resolve, reject) => {\n      const yourConfig = {\n        headers: {\n          Authorization: accessToken\n        }\n      };\n      axios.get('http://localhost:8888/api/attendence/getAttendence', yourConfig).then(response => {\n        if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {} else {\n          const jsonUser = JSON.stringify(response.data);\n          console.log(jsonUser, \": json user Attendence\");\n          localStorage.setItem('attendence', jsonUser);\n          resolve(response);\n        }\n      }).catch(error => {\n        // Error ðŸ˜¨\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n        reject(error);\n      });\n    });\n  }\n\n  getLectureData(accessToken) {\n    return new Promise((resolve, reject) => {\n      const yourConfig = {\n        headers: {\n          Authorization: accessToken\n        }\n      };\n      axios.get('http://localhost:8888/api/lectures/allLectures', yourConfig).then(response => {\n        if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {} else {\n          const jsonUser = JSON.stringify(response.data);\n          console.log(jsonUser, \"  : lectures response\");\n          localStorage.setItem('lectures', jsonUser);\n          resolve(response);\n        }\n      }).catch(error => {\n        // Error ðŸ˜¨\n        if (error.response) {\n          /*\r\n           * The request was made and the server responded with a\r\n           * status code that falls out of the range of 2xx\r\n           */\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n      });\n    });\n  }\n\n  getUserData(accessToken) {\n    return new Promise((resolve, reject) => {\n      console.log(\"hiadsfasdfasdfaswdfsdfaaaaaaaaaaaaaaaaaaa\");\n      const yourConfig = {\n        headers: {\n          Authorization: accessToken\n        }\n      };\n      axios.get('http://localhost:8888/api/students/getOneStudent', yourConfig).then(response => {\n        if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {} else {\n          const jsonUser = JSON.stringify(response.data);\n          console.log(jsonUser, \"   : user data response\");\n          localStorage.setItem('user', jsonUser);\n          resolve(response);\n        }\n      }).catch(error => {\n        // Error ðŸ˜¨\n        if (error.response) {\n          /*\r\n           * The request was made and the server responded with a\r\n           * status code that falls out of the range of 2xx\r\n           */\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n        }\n\n        console.log(error.config);\n      });\n    });\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module"}