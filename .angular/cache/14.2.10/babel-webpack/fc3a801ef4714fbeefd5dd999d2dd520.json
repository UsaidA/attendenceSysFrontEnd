{"ast":null,"code":"import _asyncToGenerator from \"C:/attendenceFrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport axios from 'axios';\nimport { Registration, singletonAuth } from \"../../classes\";\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(router, vcr, cfr) {\n    this.router = router;\n    this.vcr = vcr;\n    this.cfr = cfr;\n    this.loginText = \"\";\n  }\n\n  ngOnInit() {}\n\n  sendLoginRequest(email, password) {\n    const registration = new Registration(email.value, password.value);\n    console.log(registration);\n    const JSONOBJ = JSON.stringify(registration);\n    console.log(JSONOBJ);\n    axios.post('http://localhost:8888/api/login', JSONOBJ, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {\n        this.loginText = \"password or email incorrect\";\n        console.log(response.data, \"hi here\");\n      } else {\n        console.log(response.data.accessToken, \" access token\");\n        const auth = singletonAuth.getInstance(response.data.accessToken);\n        const stringfyUser = JSON.stringify(registration);\n        localStorage.setItem('registered', stringfyUser);\n        const promise1 = this.getAttendenceData(response.data.accessToken);\n        console.log(\"1\");\n        const promise2 = this.getUserData(response.data.accessToken);\n        console.log(\"2\");\n        const promise3 = this.getLectureData(response.data.accessToken);\n        console.log(\"3\");\n        Promise.all([promise1, promise2, promise3]).then(() => {\n          console.log(\"inside promise\");\n          console.log(localStorage.getItem('lectures'));\n          this.loadDashboard();\n        });\n      }\n\n      console.log(response);\n    }).catch(error => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n    console.log(email.value);\n  }\n\n  loadDashboard() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.vcr.clear();\n\n      const {\n        DashboardComponent\n      } = yield import('../dashboard/dashboard.component');\n\n      _this.vcr.createComponent(_this.cfr.resolveComponentFactory(DashboardComponent));\n\n      _this.router.navigate(['/dashboard']);\n    })();\n  }\n\n  getAttendenceData(accessToken) {\n    const yourConfig = {\n      headers: {\n        Authorization: accessToken\n      }\n    };\n    axios.get('http://localhost:8888/api/attendence/getAttendence', yourConfig).then(response => {\n      if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {} else {\n        const jsonUser = JSON.stringify(response.data);\n        console.log(jsonUser, \": json user Attendence\");\n        localStorage.setItem('attendence', jsonUser);\n      }\n    }).catch(error => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  }\n\n  getLectureData(accessToken) {\n    const yourConfig = {\n      headers: {\n        Authorization: accessToken\n      }\n    };\n    axios.get('http://localhost:8888/api/lectures/allLectures', yourConfig).then(response => {\n      if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {} else {\n        const jsonUser = JSON.stringify(response.data);\n        localStorage.setItem('lectures', jsonUser);\n      }\n    }).catch(error => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  }\n\n  getUserData(accessToken) {\n    const yourConfig = {\n      headers: {\n        Authorization: accessToken\n      }\n    };\n    axios.get('http://localhost:8888/api/students/getOneStudent', yourConfig).then(response => {\n      if (response.data == \"failed password\" || response.data == \"Email doesn't exist\") {} else {\n        const jsonUser = JSON.stringify(response.data);\n        localStorage.setItem('user', jsonUser);\n      }\n    }).catch(error => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  }\n\n}\n\nLoginComponent.Éµfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ÉµÉµdirectiveInject(i1.Router), i0.ÉµÉµdirectiveInject(i0.ViewContainerRef), i0.ÉµÉµdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nLoginComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 1,\n  consts: [[1, \"vh-100\", \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\"], [1, \"card\", \"bg-dark\", \"text-white\", 2, \"border-radius\", \"1rem\"], [1, \"card-body\", \"p-5\", \"text-center\"], [1, \"mb-md-5\", \"mt-md-4\", \"pb-5\"], [1, \"fw-bold\", \"mb-2\", \"text-uppercase\"], [1, \"text-white-50\", \"mb-5\"], [1, \"form-outline\", \"form-white\", \"mb-4\"], [\"type\", \"email\", \"id\", \"typeEmailX\", 1, \"form-control\", \"form-control-lg\"], [\"email\", \"\"], [\"for\", \"typeEmailX\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"typePasswordX\", 1, \"form-control\", \"form-control-lg\"], [\"password\", \"\"], [\"for\", \"typePasswordX\", 1, \"form-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-light\", \"btn-lg\", \"px-5\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ÉµÉµgetCurrentView();\n\n      i0.ÉµÉµelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\", 7);\n      i0.ÉµÉµtext(8, \"Login\");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(9, \"p\", 8);\n      i0.ÉµÉµtext(10, \"Please enter your login and password!\");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(11, \"div\", 9);\n      i0.ÉµÉµelement(12, \"input\", 10, 11);\n      i0.ÉµÉµelementStart(14, \"label\", 12);\n      i0.ÉµÉµtext(15, \"Email\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(16, \"div\", 9);\n      i0.ÉµÉµelement(17, \"input\", 13, 14);\n      i0.ÉµÉµelementStart(19, \"label\", 15);\n      i0.ÉµÉµtext(20, \"Password\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelement(21, \"br\");\n      i0.ÉµÉµelementStart(22, \"h3\");\n      i0.ÉµÉµtext(23);\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(24, \"button\", 16);\n      i0.ÉµÉµlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        i0.ÉµÉµrestoreView(_r2);\n\n        const _r0 = i0.ÉµÉµreference(13);\n\n        const _r1 = i0.ÉµÉµreference(18);\n\n        return i0.ÉµÉµresetView(ctx.sendLoginRequest(_r0, _r1));\n      });\n      i0.ÉµÉµtext(25, \"Login \");\n      i0.ÉµÉµelementEnd()()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ÉµÉµadvance(23);\n      i0.ÉµÉµtextInterpolate1(\" \", ctx.loginText, \"\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ViewContainerRef","ComponentFactoryResolver","axios","Registration","singletonAuth","Router","LoginComponent","constructor","router","vcr","cfr","ngOnInit","sendLoginRequest","email","password","registration","value","console","log","JSONOBJ","JSON","stringify","post","headers","then","response","data","loginText","accessToken","auth","getInstance","stringfyUser","localStorage","setItem","promise1","getAttendenceData","promise2","getUserData","promise3","getLectureData","Promise","all","getItem","loadDashboard","catch","error","status","request","message","config","clear","DashboardComponent","createComponent","resolveComponentFactory","navigate","yourConfig","Authorization","get","jsonUser","i0","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\attendenceFrontEnd\\src\\app\\login\\login.component.ts","C:\\attendenceFrontEnd\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver  } from '@angular/core';\r\nimport axios from 'axios';\r\nimport {Registration,Student, singletonAuth} from \"../../classes\"\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { NavigationExtras } from '@angular/router';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(public router :Router, private vcr:ViewContainerRef, private cfr: ComponentFactoryResolver) { }\r\n\r\n  loginText = \"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendLoginRequest(email: any, password: any){\r\n    const registration = new Registration(email.value, password.value);\r\n   \r\n    console.log(registration)\r\n    const JSONOBJ = JSON.stringify(registration);\r\n    console.log(JSONOBJ)\r\n    axios.post('http://localhost:8888/api/login', JSONOBJ, {headers:{'Content-Type':'application/json'}})\r\n    .then((response) => {\r\n      if (response.data ==\"failed password\" || response.data == \"Email doesn't exist\"){\r\n        this.loginText = \"password or email incorrect\"\r\n        console.log(response.data, \"hi here\")\r\n      }else{\r\n        console.log(response.data.accessToken, \" access token\");\r\n\r\n        const auth = singletonAuth.getInstance(response.data.accessToken);\r\n        const stringfyUser = JSON.stringify(registration);\r\n        localStorage.setItem('registered',stringfyUser)\r\n        \r\n        \r\n        const promise1: any = this.getAttendenceData(response.data.accessToken)\r\n        console.log(\"1\")\r\n        const promise2: any = this.getUserData(response.data.accessToken)\r\n        console.log(\"2\")\r\n        const promise3: any = this.getLectureData(response.data.accessToken)\r\n        console.log(\"3\")\r\n        Promise.all([promise1, promise2, promise3]).then(() => {\r\n          console.log(\"inside promise\");\r\n          console.log(localStorage.getItem('lectures'))\r\n          this.loadDashboard();\r\n        });\r\n        \r\n      }\r\n      console.log(response);\r\n     \r\n  })\r\n  .catch((error) => {\r\n      // Error ðŸ˜¨\r\n      if (error.response) {\r\n          /*\r\n           * The request was made and the server responded with a\r\n           * status code that falls out of the range of 2xx\r\n           */\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n      } else if (error.request) {\r\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\r\n          console.log(error.request);\r\n      } else {\r\n          // Something happened in setting up the request and triggered an Error\r\n          console.log('Error', error.message);\r\n      }\r\n      console.log(error.config);\r\n  });\r\n    \r\n    console.log(email.value);\r\n\r\n  }\r\n\r\n\r\n\r\nasync loadDashboard(){\r\n  this.vcr.clear();\r\n  const {DashboardComponent} = await import('../dashboard/dashboard.component');\r\n  this.vcr.createComponent(this.cfr.resolveComponentFactory(DashboardComponent));\r\n\r\n \r\n  this.router.navigate(['/dashboard']);\r\n}\r\ngetAttendenceData(accessToken: string){\r\n \r\n  const yourConfig = {\r\n    headers: {\r\n       Authorization: accessToken\r\n    }\r\n }\r\n axios.get('http://localhost:8888/api/attendence/getAttendence', yourConfig)\r\n .then((response) => {\r\n   if(response.data ==\"failed password\" || response.data == \"Email doesn't exist\"){\r\n   }else{\r\n     const jsonUser = JSON.stringify(response.data)\r\n     console.log(jsonUser, \": json user Attendence\")\r\n    \r\n     localStorage.setItem('attendence',jsonUser)\r\n   }\r\n  \r\n})\r\n.catch((error) => {\r\n   // Error ðŸ˜¨\r\n   if (error.response) {\r\n       /*\r\n        * The request was made and the server responded with a\r\n        * status code that falls out of the range of 2xx\r\n        */\r\n       console.log(error.response.data);\r\n       console.log(error.response.status);\r\n       console.log(error.response.headers);\r\n   } else if (error.request) {\r\n       /*\r\n        * The request was made but no response was received, `error.request`\r\n        * is an instance of XMLHttpRequest in the browser and an instance\r\n        * of http.ClientRequest in Node.js\r\n        */\r\n       console.log(error.request);\r\n   } else {\r\n       // Something happened in setting up the request and triggered an Error\r\n       console.log('Error', error.message);\r\n   }\r\n   console.log(error.config);\r\n});\r\n\r\n\r\n}\r\ngetLectureData(accessToken:string){\r\n  const yourConfig = {\r\n    headers: {\r\n       Authorization: accessToken\r\n    }\r\n }\r\n axios.get('http://localhost:8888/api/lectures/allLectures', yourConfig)\r\n .then((response) => {\r\n   if(response.data ==\"failed password\" || response.data == \"Email doesn't exist\"){\r\n   }else{\r\n     const jsonUser = JSON.stringify(response.data)\r\n     \r\n     localStorage.setItem('lectures',jsonUser)\r\n   }\r\n  \r\n})\r\n.catch((error) => {\r\n   // Error ðŸ˜¨\r\n   if (error.response) {\r\n       /*\r\n        * The request was made and the server responded with a\r\n        * status code that falls out of the range of 2xx\r\n        */\r\n       console.log(error.response.data);\r\n       console.log(error.response.status);\r\n       console.log(error.response.headers);\r\n   } else if (error.request) {\r\n       /*\r\n        * The request was made but no response was received, `error.request`\r\n        * is an instance of XMLHttpRequest in the browser and an instance\r\n        * of http.ClientRequest in Node.js\r\n        */\r\n       console.log(error.request);\r\n   } else {\r\n       // Something happened in setting up the request and triggered an Error\r\n       console.log('Error', error.message);\r\n   }\r\n   console.log(error.config);\r\n});\r\n\r\n}\r\n\r\ngetUserData(accessToken:string){\r\n\r\n const yourConfig = {\r\n    headers: {\r\n       Authorization: accessToken\r\n    }\r\n }\r\n\r\n\r\n  axios.get('http://localhost:8888/api/students/getOneStudent', yourConfig)\r\n  .then((response) => {\r\n    if(response.data ==\"failed password\" || response.data == \"Email doesn't exist\"){\r\n\r\n    }else{\r\n      \r\n      const jsonUser = JSON.stringify(response.data)\r\n\r\n     \r\n      localStorage.setItem('user',jsonUser)\r\n\r\n    }\r\n   \r\n})\r\n.catch((error) => {\r\n    // Error ðŸ˜¨\r\n    if (error.response) {\r\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n    } else if (error.request) {\r\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\r\n        console.log(error.request);\r\n    } else {\r\n        // Something happened in setting up the request and triggered an Error\r\n        console.log('Error', error.message);\r\n    }\r\n    console.log(error.config);\r\n});\r\n\r\n\r\n}\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n}\r\n","\r\n\r\n\r\n\r\n    <section class=\"vh-100 gradient-custom\">\r\n        <div class=\"container py-5 h-100\">\r\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n              <div class=\"card bg-dark text-white\" style=\"border-radius: 1rem;\">\r\n                <div class=\"card-body p-5 text-center\">\r\n      \r\n                  <div class=\"mb-md-5 mt-md-4 pb-5\">\r\n      \r\n                    <h2 class=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n                    <p class=\"text-white-50 mb-5\">Please enter your login and password!</p>\r\n      \r\n                    <div class=\"form-outline form-white mb-4\">\r\n                      <input type=\"email\" id=\"typeEmailX\" class=\"form-control form-control-lg\" #email/>\r\n                      <label class=\"form-label\" for=\"typeEmailX\">Email</label>\r\n                    </div>\r\n      \r\n                    <div class=\"form-outline form-white mb-4\">\r\n                      <input type=\"password\" id=\"typePasswordX\" class=\"form-control form-control-lg\" #password />\r\n                      <label class=\"form-label\" for=\"typePasswordX\">Password</label>\r\n                    </div>\r\n      \r\n                    <br>\r\n                    <h3> {{loginText}}</h3>\r\n      \r\n                    <button  class=\"btn btn-outline-light btn-lg px-5\" type=\"submit\" (click) =\"sendLoginRequest(email,password)\">Login </button>\r\n      \r\n                 \r\n      \r\n                  </div>\r\n      \r\n                  \r\n      \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}